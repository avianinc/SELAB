# Systemd inside a Docker container, for CI only
ARG ubuntu_version=20.04
FROM ubuntu:${ubuntu_version}

# Netlogo version - Must be after the FROM statment
ARG NETLOGO_VERSION=6.2.0

USER root

ENV \
    DEBIAN_FRONTEND=noninteractive \
    DEBCONF_NONINTERACTIVE_SEEN=true \
    PYTHONUNBUFFERED=1 \
    TZ=UTC/NEW_YORK

# DEBIAN_FRONTEND is set to avoid being asked for input and hang during build:
# https://anonoz.github.io/tech/2020/04/24/docker-build-stuck-tzdata.html
RUN export DEBIAN_FRONTEND=noninteractive \
    && apt-get update \
    && apt-get install --yes \
    build-essential \
    systemd \
    curl \
    git \
    tar \
    wget \
    sudo \
    nano \
    python3 \
    python3-venv \
    python-dev \
    python3-pip \
    libssl-dev \
    libcurl4-openssl-dev \
    inetutils-syslogd \
    && rm -rf /var/lib/apt/lists/*

# Kill all the things we don't need
RUN find /etc/systemd/system \
    /lib/systemd/system \
    -path '*.wants/*' \
    -not -name '*journald*' \
    -not -name '*systemd-tmpfiles*' \
    -not -name '*systemd-user-sessions*' \
    -exec rm \{} \;

RUN mkdir -p /etc/sudoers.d

RUN systemctl set-default multi-user.target

STOPSIGNAL SIGRTMIN+3

# Install Nodejs for jupyter builds
# https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-20-04
RUN curl -sL https://deb.nodesource.com/setup_16.x -o /tmp/nodesource_setup.sh && \
    sudo bash /tmp/nodesource_setup.sh && \
    sudo apt install nodejs -y && \
    echo "Nodejs version: $(node -v)"

# Install Docker
RUN apt-get update && apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common \
    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \
    && add-apt-repository \
    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
    $(lsb_release -cs) \
    stable" \
    && apt-get update \
    && apt-get install -y docker-ce

# Uncomment these lines for a development install
# ENV TLJH_BOOTSTRAP_DEV=yes \
#     TLJH_BOOTSTRAP_PIP_SPEC=/srv/src \
ENV PATH=/opt/tljh/hub/bin:${PATH}

EXPOSE 80

CMD ["/bin/bash", "-c", "exec /lib/systemd/systemd --log-target=journal 3>&1"]